
@model WSite_CuaHangBanHangDienThoaiDiDong.Models.AdminToken.ProductDetail_Token
@using (Ajax.BeginForm("Add", "ProductDetail", new AjaxOptions
{
    HttpMethod = "POST",
    UpdateTargetId = "load_data",
    OnSuccess = "OnSuccessCO",
    OnFailure = "OnFailure",
    OnBegin = "OnBeginCO"
}, new { @Id = "myForm" }))
{
    <script>

        function validateForm() {
            //var sdt = document.getElementById('Name').value.trim();
            //var tenKhachHang = document.getElementById('SDT').value.trim();
            //var email = document.getElementById('CCCD').value.trim();
            //var password = document.getElementById('Email').value.trim();
            //var diaChi = document.getElementById('demoPrice').value.trim();
            var confirmPassword = document.getElementById('Title').value.trim();


            if ( !confirmPassword) {

                Swal.fire({
                    icon: "error",
                    title: "Lỗi tìm...",
                    text: "Vui lòng điền đầy đủ thông tin.",
                    /*footer: '<a href="#">Why do I have this issue?</a>'*/
                });
                return false;

            }


            if (password !== confirmPassword) {

                Swal.fire({
                    icon: "warning",
                    title: "Lỗi tìm...",
                    text: "Mật khẩu và xác nhận mật khẩu không khớp.",
                    /*footer: '<a href="#">Why do I have this issue?</a>'*/
                });
                return false;
                return false;
            }



            return true;
        }


        function OnBeginCO() {
            $('#btnRegister').attr("disabled", "disabled");
        }


        //function OnSuccessCO(res) {
        //    if (res.Success) {
        //        if (res.Code == 1) {

        //            location.reload(true);
        //            const Toast = Swal.mixin({
        //                toast: true,
        //                position: "top-end",
        //                showConfirmButton: false,
        //                timer: 3000,
        //                timerProgressBar: true,
        //                didOpen: (toast) => {
        //                    toast.onmouseenter = Swal.stopTimer;
        //                    toast.onmouseleave = Swal.resumeTimer;
        //                }
        //            });

        //            Toast.fire({
        //                icon: "success",
        //                title: "Thêm nhân viên thành công"
        //            });

        //        } else {
        //        }
        //    }
        //    else {
        //        if (res.Code == -2) {
        //            Swal.fire({
        //                icon: "error",
        //                title: "Lỗi thêm nhân viên...",
        //                text: "Email đã tồn tại",
        //                /*footer: '<a href="#">Why do I have this issue?</a>'*/
        //            });

        //        }
        //        if (res.Code == -3) {
        //            Swal.fire({
        //                icon: "warning",
        //                title: "Lỗi thêm nhân viên...",
        //                text: "Số điện thoại đã tồn tại ",
        //                /*footer: '<a href="#">Why do I have this issue?</a>'*/
        //            });
        //        }
        //        if (res.Code == -4) {
        //            Swal.fire({
        //                icon: "question",
        //                title: "Lỗi thêm nhân viên...",
        //                text: "Không thấy chức năng cho nhân viên mới ",
        //                /*footer: '<a href="#">Why do I have this issue?</a>'*/
        //            });

        //        }
        //        if (res.Code == -5) {
        //            Swal.fire({
        //                icon: "info",
        //                title: "Lỗi tìm...",
        //                text: "Mã hàng được trả về ",
        //                /*footer: '<a href="#">Why do I have this issue?</a>'*/
        //            });
        //        }
        //        if (res.Code == -6) {
        //            Swal.fire({
        //                icon: "warning",
        //                title: "Lỗi tìm...",
        //                text: "Đơn hàng lập lại 2 lần ",
        //                /*footer: '<a href="#">Why do I have this issue?</a>'*/
        //            });
        //        }
        //    }

        //}







    </script>


    @Html.AntiForgeryToken()
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Thông tin thêm mới Sản phẩm</h3>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-12 ">
                    @using (Html.BeginForm("Add", "ProductDetail", FormMethod.Post, new { }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)
                        <div class="card">
                            <div class="card-header p-2">
                                <ul class="nav nav-pills">
                                    <li class="nav-item"><a class="nav-link active" href="#activity" data-toggle="tab">Thông tin chung</a></li>
                                    <li class="nav-item"><a class="nav-link" href="#timeline" data-toggle="tab">Hình ảnh</a></li>
                                    <li class="nav-item"><a class="nav-link" href="#settings" data-toggle="tab">SEO</a></li>
                                </ul>
                            </div><!-- /.card-header -->
                            <div class="card-body">
                                <div class="tab-content">
                                    <div class="active tab-pane" id="activity">
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">Tên sản phẩm</label>

                                            <input type="text" name="Title" id="Title" required class="form-control" autocomplete="off" placeholder="Địa Chỉ" />



                                            @*@Html.TextBoxFor(x => x.Title, new { @class = "form-control", @placeholder = "Tên sản phẩm" })*@
                                            @Html.ValidationMessageFor(x => x.Title, null, new { @class = "text-danger" })
                                        </div>
                                        @*<div class="form-group">
                                    <label for="exampleInputEmail1">Alias</label>
                                    @Html.TextBoxFor(x => x.Alias, new { @class = "form-control", @placeholder = "Alias" })
                                    @Html.ValidationMessageFor(x => x.Alias, null, new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label for="exampleInputEmail1">SKU</label>
                                    @Html.TextBoxFor(x => x.ProductCode, new { @class = "form-control", @placeholder = "Mã mã phẩm" })
                                    @Html.ValidationMessageFor(x => x.ProductCode, null, new { @class = "text-danger" })
                                </div>*@
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">Danh mục</label>
                                            @Html.DropDownListFor(x => x.ProductCategoryId, ViewBag.ProductCategory as SelectList, "-Chọn danh mục sản phẩm-", new { @class = "form-control", @placeholder = "Mã sản phẩm" })
                                            @Html.ValidationMessageFor(x => x.ProductCategoryId, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">Hãng sản phẩm</label>
                                            @Html.DropDownListFor(x => x.ProductCompanyId, ViewBag.ProductCompany as SelectList, "-Hãng sản phẩm-", new { @class = "form-control", @placeholder = "Mã sản phẩm" })
                                            @Html.ValidationMessageFor(x => x.ProductCompanyId, null, new { @class = "text-danger" })
                                        </div>
                                        @*<div class="form-group">
                                    <label for="exampleInputEmail1">Mô tả</label>
                                    @Html.TextAreaFor(x => x.Description, new { @class = "form-control", @placeholder = "Mã mã phẩm" })
                                    @Html.ValidationMessageFor(x => x.Description, null, new { @class = "text-danger" })
                                </div>*@
                                        @*<div class="form-group">
                                    <label for="exampleInputEmail1">Chi tiết sản phẩm</label>
                                    @Html.TextAreaFor(x => x.Detail, new { @class = "form-control", @id = "txtDetail" })
                                    @Html.ValidationMessageFor(x => x.Detail, null, new { @class = "text-danger" })
                                </div>*@
                                        <div class="row">

                                            <div class="col-3">
                                                <div class="form-group">
                                                    <label for="exampleInputEmail1">Giá</label>
                                                    <input type="text" name="demoPrice" value="0" id="demoPrice" class="form-control auto" data-a-dec="," data-a-sep=".">
                                                    @Html.HiddenFor(x => x.Price, new { @class = "", @placeholder = "Giá" })
                                                    @Html.ValidationMessageFor(x => x.Price, null, new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-3">
                                                <div class="form-group">
                                                    <label for="exampleInputEmail1">Giá khuyến mãi</label>
                                                    <input type="text" name="demoPriceSale" id="demoPriceSale" value="0" class="form-control auto">
                                                    @Html.HiddenFor(x => x.PriceSale, new { @class = "form-control", @placeholder = "Khuyến mãi" })
                                                    @Html.ValidationMessageFor(x => x.PriceSale, null, new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-3">
                                                <div class="form-group">
                                                    <label for="exampleInputEmail1">Giá nhập</label>
                                                    <input type="text" name="demoOriginalPrice" id="demoOriginalPrice" value="" class="form-control auto">
                                                    @Html.HiddenFor(x => x.OrigianlPrice, new { @class = "form-control", @placeholder = "Giá nhập" })
                                                    @Html.ValidationMessageFor(x => x.OrigianlPrice, null, new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <!-- /.tab-pane -->
                                    <div class="tab-pane" id="timeline">
                                        <div class="row">
                                            <div class="col-md-12 text-right">
                                                <input type="button" class="btn btn-primary" id="iTaiAnh" onclick="BrowseServer();" value="Tải ảnh" />
                                            </div>
                                            <div class="col-md-12">
                                                <table class="table table-hover" id="tbAnhSanPham">
                                                    <thead>
                                                        <tr>
                                                            <th class="text-center">#</th>
                                                            <th class="text-center">Ảnh</th>
                                                            <th class="text-center">Ảnh đại diện</th>
                                                            <th class="text-center">Thao tác</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody id="tbHtml">
                                                    </tbody>
                                                </table>
                                                <input type="hidden" id="tCurrentId" value="0" />
                                            </div>
                                        </div>
                                    </div>
                                    <!-- /.tab-pane -->

                                    <div class="tab-pane" id="settings">

                                    </div>
                                    <!-- /.tab-pane -->
                                </div>
                                <!-- /.tab-content -->
                            </div><!-- /.card-body -->
                            <div class="form-group">
                                <button type="submit" class="btn btn-success">Thêm mới</button>
                            </div>
                        </div> <!-- /.card -->
                    }
                </div>
            </div>
        </div>
        <!-- /.card-body -->
        <div class="card-footer">

        </div>
        <!-- /.card-footer-->
    </div>

    




}